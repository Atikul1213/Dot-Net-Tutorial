// <auto-generated />
using System;
using FirstCoreMVCWebApplication.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FirstCoreMVCWebApplication.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241107171514_mig1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeSkillSet", b =>
                {
                    b.Property<int>("EmployeesEmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("SkillSetsSkillSetId")
                        .HasColumnType("int");

                    b.HasKey("EmployeesEmployeeId", "SkillSetsSkillSetId");

                    b.HasIndex("SkillSetsSkillSetId");

                    b.ToTable("EmployeeSkillSet");
                });

            modelBuilder.Entity("FirstCoreMVCWebApplication.Models.BrainStationEmployeeModel.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AddressId");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("FirstCoreMVCWebApplication.Models.BrainStationEmployeeModel.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            Name = "IT"
                        },
                        new
                        {
                            DepartmentId = 2,
                            Name = "HR"
                        },
                        new
                        {
                            DepartmentId = 3,
                            Name = "Payroll"
                        },
                        new
                        {
                            DepartmentId = 4,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("FirstCoreMVCWebApplication.Models.BrainStationEmployeeModel.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("FirstCoreMVCWebApplication.Models.BrainStationEmployeeModel.JobDetail", b =>
                {
                    b.Property<int>("JodDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JodDetailId"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("JobTitleId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("JodDetailId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.HasIndex("JobTitleId");

                    b.ToTable("JobDetails");
                });

            modelBuilder.Entity("FirstCoreMVCWebApplication.Models.BrainStationEmployeeModel.JobTitle", b =>
                {
                    b.Property<int>("JobTitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobTitleId"));

                    b.Property<string>("TitleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("JobTitleId");

                    b.ToTable("JobTitles");

                    b.HasData(
                        new
                        {
                            JobTitleId = 1,
                            TitleName = "Software Engineer"
                        },
                        new
                        {
                            JobTitleId = 2,
                            TitleName = "Project Manager"
                        },
                        new
                        {
                            JobTitleId = 3,
                            TitleName = "Quality Assurance Engineer"
                        },
                        new
                        {
                            JobTitleId = 4,
                            TitleName = "Business Analyst"
                        },
                        new
                        {
                            JobTitleId = 5,
                            TitleName = "System Administrator"
                        });
                });

            modelBuilder.Entity("FirstCoreMVCWebApplication.Models.BrainStationEmployeeModel.SkillSet", b =>
                {
                    b.Property<int>("SkillSetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SkillSetId"));

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SkillSetId");

                    b.ToTable("SkillSets");

                    b.HasData(
                        new
                        {
                            SkillSetId = 1,
                            SkillName = "Dot Net"
                        },
                        new
                        {
                            SkillSetId = 2,
                            SkillName = "Java"
                        },
                        new
                        {
                            SkillSetId = 3,
                            SkillName = "Python"
                        },
                        new
                        {
                            SkillSetId = 4,
                            SkillName = "PHP"
                        },
                        new
                        {
                            SkillSetId = 5,
                            SkillName = "Database"
                        });
                });

            modelBuilder.Entity("EmployeeSkillSet", b =>
                {
                    b.HasOne("FirstCoreMVCWebApplication.Models.BrainStationEmployeeModel.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FirstCoreMVCWebApplication.Models.BrainStationEmployeeModel.SkillSet", null)
                        .WithMany()
                        .HasForeignKey("SkillSetsSkillSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FirstCoreMVCWebApplication.Models.BrainStationEmployeeModel.Address", b =>
                {
                    b.HasOne("FirstCoreMVCWebApplication.Models.BrainStationEmployeeModel.Employee", "Employee")
                        .WithOne("Address")
                        .HasForeignKey("FirstCoreMVCWebApplication.Models.BrainStationEmployeeModel.Address", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("FirstCoreMVCWebApplication.Models.BrainStationEmployeeModel.JobDetail", b =>
                {
                    b.HasOne("FirstCoreMVCWebApplication.Models.BrainStationEmployeeModel.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FirstCoreMVCWebApplication.Models.BrainStationEmployeeModel.Employee", "Employee")
                        .WithOne("JobDetail")
                        .HasForeignKey("FirstCoreMVCWebApplication.Models.BrainStationEmployeeModel.JobDetail", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FirstCoreMVCWebApplication.Models.BrainStationEmployeeModel.JobTitle", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Employee");

                    b.Navigation("JobTitle");
                });

            modelBuilder.Entity("FirstCoreMVCWebApplication.Models.BrainStationEmployeeModel.Employee", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("JobDetail")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
